{"version":3,"sources":["bootstrap-switch.coffee"],"names":[],"mappings":"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","file":"bootstrap-switch.js","sourceRoot":"/source/","sourcesContent":["do ($ = window.jQuery, window) ->\n  \"use strict\"\n\n  class BootstrapSwitch\n    constructor: (element, options = {}) ->\n      @$element = $ element\n      @options = $.extend {}, $.fn.bootstrapSwitch.defaults,\n        state: @$element.is \":checked\"\n        size: @$element.data \"size\"\n        animate: @$element.data \"animate\"\n        disabled: @$element.is \":disabled\"\n        readonly: @$element.is \"[readonly]\"\n        indeterminate: @$element.data \"indeterminate\"\n        inverse: @$element.data \"inverse\"\n        radioAllOff: @$element.data \"radio-all-off\"\n        onColor: @$element.data \"on-color\"\n        offColor: @$element.data \"off-color\"\n        onText: @$element.data \"on-text\"\n        offText: @$element.data \"off-text\"\n        labelText: @$element.data \"label-text\"\n        handleWidth: @$element.data \"handle-width\"\n        labelWidth: @$element.data \"label-width\"\n        baseClass: @$element.data \"base-class\"\n        wrapperClass: @$element.data \"wrapper-class\"\n      , options\n      @$wrapper = $ \"<div>\",\n        class: do =>\n          classes = [\"#{@options.baseClass}\"].concat @_getClasses @options.wrapperClass\n\n          classes.push if @options.state then \"#{@options.baseClass}-on\" else \"#{@options.baseClass}-off\"\n          classes.push \"#{@options.baseClass}-#{@options.size}\" if @options.size?\n          classes.push \"#{@options.baseClass}-disabled\" if @options.disabled\n          classes.push \"#{@options.baseClass}-readonly\" if @options.readonly\n          classes.push \"#{@options.baseClass}-indeterminate\" if @options.indeterminate\n          classes.push \"#{@options.baseClass}-inverse\" if @options.inverse\n          classes.push \"#{@options.baseClass}-id-#{@$element.attr(\"id\")}\" if @$element.attr \"id\"\n          classes.join \" \"\n      @$container = $ \"<div>\",\n        class: \"#{@options.baseClass}-container\"\n      @$on = $ \"<span>\",\n        html: @options.onText,\n        class: \"#{@options.baseClass}-handle-on #{@options.baseClass}-#{@options.onColor}\"\n      @$off = $ \"<span>\",\n        html: @options.offText,\n        class: \"#{@options.baseClass}-handle-off #{@options.baseClass}-#{@options.offColor}\"\n      @$label = $ \"<span>\",\n        html: @options.labelText\n        class: \"#{@options.baseClass}-label\"\n\n      # set up events\n      @$element.on \"init.bootstrapSwitch\", => @options.onInit.apply element, arguments\n      @$element.on \"switchChange.bootstrapSwitch\", => @options.onSwitchChange.apply element, arguments\n\n      # reassign elements after dom modification\n      @$container = @$element.wrap(@$container).parent()\n      @$wrapper = @$container.wrap(@$wrapper).parent()\n\n      # insert handles and label and trigger event\n      @$element\n      .before(if @options.inverse then @$off else @$on)\n      .before(@$label)\n      .before(if @options.inverse then @$on else @$off)\n\n      # indeterminate state\n      @$element.prop \"indeterminate\", true  if @options.indeterminate\n\n      # normalize handles width and set container position\n      @_init()\n\n      # initialise handlers\n      @_elementHandlers()\n      @_handleHandlers()\n      @_labelHandlers()\n      @_formHandler()\n      @_externalLabelHandler()\n\n      @$element.trigger \"init.bootstrapSwitch\"\n\n    _constructor: BootstrapSwitch\n\n    state: (value, skip) ->\n      return @options.state  if typeof value is \"undefined\"\n      return @$element  if @options.disabled or @options.readonly\n      return @$element  if @options.state and not @options.radioAllOff and @$element.is \":radio\"\n\n      # remove indeterminate\n      @indeterminate false  if @options.indeterminate\n      value = not not value\n\n      @$element.prop(\"checked\", value).trigger \"change.bootstrapSwitch\", skip\n      @$element\n\n    toggleState: (skip) ->\n      return @$element  if @options.disabled or @options.readonly\n\n      if @options.indeterminate\n        @indeterminate false\n        @state true\n      else\n        @$element.prop(\"checked\", not @options.state).trigger \"change.bootstrapSwitch\", skip\n\n    size: (value) ->\n      return @options.size  if typeof value is \"undefined\"\n\n      @$wrapper.removeClass \"#{@options.baseClass}-#{@options.size}\" if @options.size?\n      @$wrapper.addClass \"#{@options.baseClass}-#{value}\" if value\n      @_width()\n      @_containerPosition()\n      @options.size = value\n      @$element\n\n    animate: (value) ->\n      return @options.animate  if typeof value is \"undefined\"\n\n      value = not not value\n      return @$element  if value is @options.animate\n\n      @toggleAnimate()\n\n    toggleAnimate: ->\n      @options.animate = not @options.animate\n\n      @$wrapper.toggleClass \"#{@options.baseClass}-animate\"\n      @$element\n\n    disabled: (value) ->\n      return @options.disabled  if typeof value is \"undefined\"\n\n      value = not not value\n      return @$element  if value is @options.disabled\n\n      @toggleDisabled()\n\n    toggleDisabled: ->\n      @options.disabled = not @options.disabled\n\n      @$element.prop \"disabled\", @options.disabled\n      @$wrapper.toggleClass \"#{@options.baseClass}-disabled\"\n      @$element\n\n    readonly: (value) ->\n      return @options.readonly  if typeof value is \"undefined\"\n\n      value = not not value\n      return @$element  if value is @options.readonly\n\n      @toggleReadonly()\n\n    toggleReadonly: ->\n      @options.readonly = not @options.readonly\n\n      @$element.prop \"readonly\", @options.readonly\n      @$wrapper.toggleClass \"#{@options.baseClass}-readonly\"\n      @$element\n\n    indeterminate: (value) ->\n      return @options.indeterminate  if typeof value is \"undefined\"\n\n      value = not not value\n      return @$element  if value is @options.indeterminate\n\n      @toggleIndeterminate()\n\n    toggleIndeterminate: ->\n      @options.indeterminate = not @options.indeterminate\n\n      @$element.prop \"indeterminate\", @options.indeterminate\n      @$wrapper.toggleClass \"#{@options.baseClass}-indeterminate\"\n      @_containerPosition()\n      @$element\n\n    inverse: (value) ->\n      return @options.inverse  if typeof value is \"undefined\"\n\n      value = not not value\n      return @$element  if value is @options.inverse\n\n      @toggleInverse()\n\n    toggleInverse: ->\n      @$wrapper.toggleClass \"#{@options.baseClass}-inverse\"\n      $on = @$on.clone true\n      $off = @$off.clone true\n      @$on.replaceWith $off\n      @$off.replaceWith $on\n      @$on = $off\n      @$off = $on\n      @options.inverse = not @options.inverse\n      @$element\n\n    onColor: (value) ->\n      color = @options.onColor\n\n      return color  if typeof value is \"undefined\"\n\n      @$on.removeClass \"#{@options.baseClass}-#{color}\" if color?\n      @$on.addClass \"#{@options.baseClass}-#{value}\"\n      @options.onColor = value\n      @$element\n\n    offColor: (value) ->\n      color = @options.offColor\n\n      return color  if typeof value is \"undefined\"\n\n      @$off.removeClass \"#{@options.baseClass}-#{color}\" if color?\n      @$off.addClass \"#{@options.baseClass}-#{value}\"\n      @options.offColor = value\n      @$element\n\n    onText: (value) ->\n      return @options.onText  if typeof value is \"undefined\"\n\n      @$on.html value\n      @_width()\n      @_containerPosition()\n      @options.onText = value\n      @$element\n\n    offText: (value) ->\n      return @options.offText  if typeof value is \"undefined\"\n\n      @$off.html value\n      @_width()\n      @_containerPosition()\n      @options.offText = value\n      @$element\n\n    labelText: (value) ->\n      return @options.labelText  if typeof value is \"undefined\"\n\n      @$label.html value\n      @_width()\n      @options.labelText = value\n      @$element\n\n    handleWidth: (value) ->\n      return @options.handleWidth  if typeof value is \"undefined\"\n\n      @options.handleWidth = value\n      @_width()\n      @_containerPosition()\n      @$element\n\n    labelWidth: (value) ->\n      return @options.labelWidth  if typeof value is \"undefined\"\n\n      @options.labelWidth = value\n      @_width()\n      @_containerPosition()\n      @$element\n\n    baseClass: (value) ->\n      @options.baseClass\n\n    wrapperClass: (value) ->\n      return @options.wrapperClass  if typeof value is \"undefined\"\n\n      value = $.fn.bootstrapSwitch.defaults.wrapperClass unless value\n\n      @$wrapper.removeClass @_getClasses(@options.wrapperClass).join \" \"\n      @$wrapper.addClass @_getClasses(value).join \" \"\n      @options.wrapperClass = value\n      @$element\n\n    radioAllOff: (value) ->\n      return @options.radioAllOff  if typeof value is \"undefined\"\n\n      value = not not value\n      return @$element  if value is @options.radioAllOff\n\n      @options.radioAllOff = value\n      @$element\n\n    onInit: (value) ->\n      return @options.onInit  if typeof value is \"undefined\"\n\n      value = $.fn.bootstrapSwitch.defaults.onInit unless value\n\n      @options.onInit = value\n      @$element\n\n    onSwitchChange: (value) ->\n      return @options.onSwitchChange  if typeof value is \"undefined\"\n\n      value = $.fn.bootstrapSwitch.defaults.onSwitchChange unless value\n\n      @options.onSwitchChange = value\n      @$element\n\n    destroy: ->\n      $form = @$element.closest \"form\"\n\n      $form.off(\"reset.bootstrapSwitch\").removeData \"bootstrap-switch\" if $form.length\n      @$container.children().not(@$element).remove()\n      @$element.unwrap().unwrap().off(\".bootstrapSwitch\").removeData \"bootstrap-switch\"\n      @$element\n\n    _width: ->\n      $handles = @$on.add(@$off)\n\n      # remove width from inline style\n      $handles.add(@$label).css(\"width\", \"\")\n\n      # save handleWidth for further label width calculation check\n      handleWidth = if @options.handleWidth is \"auto\"\n      then Math.max @$on.width(), @$off.width()\n      else @options.handleWidth\n\n      # set handles width\n      $handles.width handleWidth\n\n      # set label width\n      @$label.width (index, width) =>\n        return @options.labelWidth  if @options.labelWidth isnt \"auto\"\n\n        if width < handleWidth then handleWidth else width\n\n      # get handle and label widths\n      @_handleWidth = @$on.outerWidth()\n      @_labelWidth = @$label.outerWidth()\n\n      # set container and wrapper widths\n      @$container.width (@_handleWidth * 2) + @_labelWidth\n      @$wrapper.width @_handleWidth + @_labelWidth\n\n    _containerPosition: (state = @options.state, callback) ->\n      @$container\n      .css \"margin-left\", =>\n        values = [0, \"-#{@_handleWidth}px\"]\n\n        return \"-#{@_handleWidth / 2}px\"  if @options.indeterminate\n\n        if state\n          return  if @options.inverse then values[1] else values[0]\n        else\n          return  if @options.inverse then values[0] else values[1]\n\n      return  unless callback\n\n      setTimeout ->\n        callback()\n      , 50\n\n    _init: ->\n      init = =>\n        @_width()\n        @_containerPosition null, =>\n          @$wrapper.addClass \"#{@options.baseClass}-animate\"  if @options.animate\n\n      return init()  if @$wrapper.is \":visible\"\n\n      initInterval = window.setInterval =>\n        if @$wrapper.is \":visible\"\n          init()\n          window.clearInterval initInterval\n      , 50\n\n    _elementHandlers: ->\n      @$element.on\n        \"change.bootstrapSwitch\": (e, skip) =>\n          e.preventDefault()\n          e.stopImmediatePropagation()\n\n          state = @$element.is \":checked\"\n\n          @_containerPosition state\n          return  if state is @options.state\n\n          @options.state = state\n          @$wrapper.toggleClass(\"#{@options.baseClass}-off\").toggleClass \"#{@options.baseClass}-on\"\n\n          unless skip\n            if @$element.is \":radio\"\n              $(\"[name='#{@$element.attr('name')}']\")\n              .not(@$element)\n              .prop(\"checked\", false)\n              .trigger \"change.bootstrapSwitch\", true\n\n            @$element.trigger \"switchChange.bootstrapSwitch\", [state]\n\n        \"focus.bootstrapSwitch\": (e) =>\n          e.preventDefault()\n          @$wrapper.addClass \"#{@options.baseClass}-focused\"\n\n        \"blur.bootstrapSwitch\": (e) =>\n          e.preventDefault()\n          @$wrapper.removeClass \"#{@options.baseClass}-focused\"\n\n        \"keydown.bootstrapSwitch\": (e) =>\n          return  if not e.which or @options.disabled or @options.readonly\n\n          switch e.which\n            when 37\n              e.preventDefault()\n              e.stopImmediatePropagation()\n\n              @state false\n            when 39\n              e.preventDefault()\n              e.stopImmediatePropagation()\n\n              @state true\n\n    _handleHandlers: ->\n      @$on.on \"click.bootstrapSwitch\", (event) =>\n        event.preventDefault()\n        event.stopPropagation()\n\n        @state false\n        @$element.trigger \"focus.bootstrapSwitch\"\n\n      @$off.on \"click.bootstrapSwitch\", (event) =>\n        event.preventDefault()\n        event.stopPropagation()\n\n        @state true\n        @$element.trigger \"focus.bootstrapSwitch\"\n\n    _labelHandlers: ->\n      @$label.on\n        \"mousedown.bootstrapSwitch touchstart.bootstrapSwitch\": (e) =>\n          return  if @_dragStart or @options.disabled or @options.readonly\n\n          e.preventDefault()\n          e.stopPropagation()\n\n          @_dragStart = (e.pageX or e.originalEvent.touches[0].pageX) - parseInt @$container.css(\"margin-left\"), 10\n          @$wrapper.removeClass \"#{@options.baseClass}-animate\"  if @options.animate\n          @$element.trigger \"focus.bootstrapSwitch\"\n\n        \"mousemove.bootstrapSwitch touchmove.bootstrapSwitch\": (e) =>\n          return  unless @_dragStart?\n\n          e.preventDefault()\n\n          difference = (e.pageX or e.originalEvent.touches[0].pageX) - @_dragStart\n          return  if difference < -@_handleWidth or difference > 0\n\n          @_dragEnd = difference\n          @$container.css \"margin-left\", \"#{@_dragEnd}px\"\n\n        \"mouseup.bootstrapSwitch touchend.bootstrapSwitch\": (e) =>\n          return  unless @_dragStart\n\n          e.preventDefault()\n\n          @$wrapper.addClass \"#{@options.baseClass}-animate\"  if @options.animate\n          if @_dragEnd\n            state = @_dragEnd > -(@_handleWidth / 2)\n\n            @_dragEnd = false\n            @state if @options.inverse then not state else state\n          else\n            @state not @options.state\n\n          @_dragStart = false\n\n        \"mouseleave.bootstrapSwitch\": (e) =>\n          @$label.trigger \"mouseup.bootstrapSwitch\"\n\n    _externalLabelHandler: ->\n      $externalLabel = @$element.closest(\"label\")\n\n      $externalLabel.on \"click\", (event) =>\n        event.preventDefault()\n        event.stopImmediatePropagation()\n\n        # reimplement toggle state on external label only if it is not the target\n        @toggleState()  if event.target is $externalLabel[0]\n\n    _formHandler: ->\n      $form = @$element.closest \"form\"\n\n      return  if $form.data \"bootstrap-switch\"\n\n      $form\n      .on \"reset.bootstrapSwitch\", ->\n        window.setTimeout ->\n          $form\n          .find(\"input\")\n          .filter( -> $(@).data \"bootstrap-switch\")\n          .each -> $(@).bootstrapSwitch \"state\", @checked\n        , 1\n      .data \"bootstrap-switch\", true\n\n    _getClasses: (classes) ->\n      return [\"#{@options.baseClass}-#{classes}\"]  unless $.isArray classes\n\n      cls = []\n      for c in classes\n        cls.push \"#{@options.baseClass}-#{c}\"\n      cls\n\n  $.fn.bootstrapSwitch = (option, args...) ->\n    ret = @\n    @each ->\n      $this = $ @\n      data = $this.data \"bootstrap-switch\"\n\n      $this.data \"bootstrap-switch\", data = new BootstrapSwitch @, option  unless data\n      ret = data[option].apply data, args if typeof option is \"string\"\n    ret\n\n  $.fn.bootstrapSwitch.Constructor = BootstrapSwitch\n  $.fn.bootstrapSwitch.defaults =\n    state: true\n    size: null\n    animate: true\n    disabled: false\n    readonly: false\n    indeterminate: false\n    inverse: false\n    radioAllOff: false\n    onColor: \"primary\"\n    offColor: \"default\"\n    onText: \"ON\"\n    offText: \"OFF\"\n    labelText: \"&nbsp;\"\n    handleWidth: \"auto\"\n    labelWidth: \"auto\"\n    baseClass: \"bootstrap-switch\"\n    wrapperClass: \"wrapper\"\n    onInit: ->\n    onSwitchChange: ->\n"]}